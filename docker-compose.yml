services:
  db:
    image: postgres:latest
    restart: unless-stopped
    env_file: .env
    volumes:
      - films-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - films-caches-data:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: redis-server --appendonly yes
    restart: unless-stopped

  api:
    build: .
    restart: unless-stopped
    depends_on:
      - db
    env_file: .env
    ports:
     - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  tests:
    profiles:
      - tests
    build: .
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      pytest -s --disable-warnings;
      exit 0;
      "
    depends_on:
      - api
    restart: no

volumes:
  films-db-data:
  films-caches-data:

